/**
 * unclassified_dataÏóêÏÑú 2025-10-15 Îç∞Ïù¥ÌÑ∞ Ï∂úÏ≤ò ÌôïÏù∏
 */

async function checkUnclassifiedSource() {
  try {
    console.log('üîç 2025-10-15 unclassified_data Ï°∞Ìöå Ï§ë...\n');
    
    const response = await fetch('https://api.youthbepulse.com/api/unclassified-by-date?date=2025-10-15');
    const result = await response.json();
    
    if (!result.success || !result.data) {
      throw new Error('Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå Ïã§Ìå®');
    }
    
    const data = result.data;
    console.log(`üìÖ 2025-10-15 Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞: ${data.length}Í∞ú\n`);
    
    // ÏàòÏßë ÌÉÄÏûÖÎ≥Ñ Î∂ÑÎ•ò
    console.log('üì¶ ÏàòÏßë ÌÉÄÏûÖÎ≥Ñ Î∂ÑÌè¨:');
    const collectionTypes = {};
    data.forEach(item => {
      const type = item.collection_type || 'manual';
      collectionTypes[type] = (collectionTypes[type] || 0) + 1;
    });
    
    Object.entries(collectionTypes).forEach(([type, count]) => {
      console.log(`   - ${type}: ${count}Í∞ú`);
    });
    
    console.log('');
    
    // ÌôïÏù∏Ìï† Ï±ÑÎÑêÎì§
    const checkChannels = [
      'CoComelon - Cody Time',
      'Diana Belitskay', 
      'MaviGadget',
      'DisneyMusicVEVO',
      'Íπ®ÎπÑÌÇ§Ï¶à'
    ];
    
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
    console.log('üîç ÌäπÏ†ï ÏòÅÏÉÅ Ï∂úÏ≤ò Î∂ÑÏÑù:\n');
    
    for (const channelName of checkChannels) {
      const videos = data.filter(item => 
        item.channel_name && item.channel_name.includes(channelName)
      );
      
      if (videos.length > 0) {
        const video = videos[0];
        console.log(`üì∫ Ï±ÑÎÑê: ${video.channel_name}`);
        console.log(`   Ï†úÎ™©: ${video.video_title?.substring(0, 60)}...`);
        console.log(`   ÎπÑÎîîÏò§ID: ${video.video_id}`);
        console.log(`   Ï°∞ÌöåÏàò: ${parseInt(video.view_count || 0).toLocaleString()}`);
        console.log(`   ÏóÖÎ°úÎìú: ${video.upload_date}`);
        console.log(`   ÏàòÏßëÏùº: ${video.collection_date || video.day_key_local}`);
        console.log(`   üìå ÏàòÏßëÌÉÄÏûÖ: ${video.collection_type || 'manual'} ${video.collection_type === 'auto' ? 'ü§ñ' : 'üìù'}`);
        console.log(`   üìå ÌÇ§ÏõåÎìú: ${video.keyword || video.searchKeyword || 'unknown'}`);
        console.log(`   üìå ÏÜåÏä§: ${video.source || video.collection_source || 'unknown'}`);
        console.log(`   Î∂ÑÎ•ò: ${video.category || 'ÎØ∏Î∂ÑÎ•ò'} > ${video.sub_category || 'ÎØ∏Î∂ÑÎ•ò'}`);
        console.log('');
      } else {
        console.log(`‚ùå ${channelName}: Ï∞æÏùÑ Ïàò ÏóÜÏùå\n`);
      }
    }
    
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
    
    // ÌïúÍ∏Ä vs Ìï¥Ïô∏
    const korean = data.filter(item => {
      const title = item.video_title || '';
      const channel = item.channel_name || '';
      return /[Í∞Ä-Ìû£]/.test(title) || /[Í∞Ä-Ìû£]/.test(channel);
    });
    
    const foreign = data.filter(item => {
      const title = item.video_title || '';
      const channel = item.channel_name || '';
      return !/[Í∞Ä-Ìû£]/.test(title) && !/[Í∞Ä-Ìû£]/.test(channel);
    });
    
    console.log('üåè Ïñ∏Ïñ¥Î≥Ñ Î∂ÑÌè¨:');
    console.log(`   - ÌïúÍ∏Ä: ${korean.length}Í∞ú (${Math.round(korean.length / data.length * 100)}%)`);
    console.log(`   - Ìï¥Ïô∏: ${foreign.length}Í∞ú (${Math.round(foreign.length / data.length * 100)}%)`);
    console.log('');
    
    // Ìï¥Ïô∏ ÏòÅÏÉÅ ÏÉÅÏúÑ 20Í∞ú
    if (foreign.length > 0) {
      console.log('üåç Ìï¥Ïô∏ ÏòÅÏÉÅ TOP 20 (Ï°∞ÌöåÏàò Ïàú):\n');
      foreign
        .sort((a, b) => parseInt(b.view_count || 0) - parseInt(a.view_count || 0))
        .slice(0, 20)
        .forEach((item, i) => {
          console.log(`${i + 1}. ${item.channel_name}`);
          console.log(`   ${item.video_title?.substring(0, 50)}...`);
          console.log(`   Ï°∞ÌöåÏàò: ${parseInt(item.view_count || 0).toLocaleString()}, ÌÇ§ÏõåÎìú: ${item.keyword || item.searchKeyword || 'unknown'}`);
          console.log('');
        });
    }
    
    // ÌÇ§ÏõåÎìúÎ≥Ñ Î∂ÑÌè¨ (ÏûêÎèôÏàòÏßëÏù∏ Í≤ΩÏö∞)
    const autoCollected = data.filter(item => item.collection_type === 'auto');
    if (autoCollected.length > 0) {
      console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
      console.log(`ü§ñ ÏûêÎèôÏàòÏßë Îç∞Ïù¥ÌÑ∞: ${autoCollected.length}Í∞ú\n`);
      
      const keywords = {};
      autoCollected.forEach(item => {
        const keyword = item.keyword || item.searchKeyword || 'trending';
        keywords[keyword] = (keywords[keyword] || 0) + 1;
      });
      
      console.log('üîç ÌÇ§ÏõåÎìúÎ≥Ñ Î∂ÑÌè¨:');
      Object.entries(keywords)
        .sort((a, b) => b[1] - a[1])
        .forEach(([keyword, count]) => {
          console.log(`   - ${keyword}: ${count}Í∞ú`);
        });
    }
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  }
}

checkUnclassifiedSource();

